{"version":3,"sources":["logo.svg","components/Header.js","components/OrderbookStreamer/Subscription.js","components/OrderbookStreamer/Chart.js","services/Utils.js","components/OrderbookStreamer/Stats.js","components/OrderbookStreamer/OrderRow.js","components/OrderbookStreamer/OrderTable.js","components/OrderbookStreamer/Display.js","services/OrderbookService.js","components/OrderbookStreamer/OrderbookStreamer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","style","overflowX","title","defaultProps","Subscription","am4core","am4themes_animated","Component","Utils","number","decimalPlaces","k","formattedNumber","toFixed","numeral","format","repeat","utils","Stats","handleChange","e","setState","priceImpactVolume","target","value","toggleState","bind","toggleDirection","state","updated","toggle","direction","stats","spread","midpoint","high","low","depth","bids","asks","impact","buy","sell","averageBuyPrice","averageSellPrice","this","lastBid","firstAsk","parseFloat","percentage","getSpread","lowerLimit","upperLimit","bidDepthVolFrom","bidDepthVolTo","bid","bidsMap","bidsvolume","askDepthVolFrom","askDepthVolTo","ask","asksMap","asksvolume","to","from","average","bidAverage","bidTotalVol","askAverage","askTotalVol","side","bidstotalvolume","askstotalvolume","Math","min","orders","Object","keys","sort","a","b","getDepth","getPriceImpact","length","getStats","type","id","name","onChange","checked","htmlFor","formatNumber","OrderRow","lastUpdated","indexOf","Number","order","c","setTimeout","price","volume","tsymPrice","totalVolume","OrderTable","orderKeys","map","key","containerHeight","elementHeight","getTableRows","Display","nextProps","nextState","nextContext","client","W3CWebSocket","orderbookService","snapshot","0","1","list","desc","res","i","totalvolume","dp","ordered","forEach","callback","BID","item","P","Q","String","ASK","bidKeys","slice","topBids","bidKey","push","askKeys","topAsks","askKey","processData","update","ACTION","SIDE","undefined","console","error","log","onopen","send","JSON","stringify","action","subs","api_key","onmessage","message","data","msg","parse","TYPE","populateSnapshot","updateSnapshot","currency","close","OrderbookStreamer","subscribe","currentComponent","setInterval","prevState","getSnapshot","getLastUpdated","resetLastUpdated","event","unsubscribe","changeSubscription","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.25a27a40.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = (props) => (\r\n    <nav className=\"header navbar navbar-dark bg-dark\" style={{overflowX: 'hidden'}}>\r\n        <div className=\"text-center mx-auto\">\r\n            <div className=\"\">\r\n                <div className=\"h3 ml-3 my-auto text-light d-inline-block\">{props.title}</div>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n);\r\n\r\nHeader.defaultProps = {\r\n    title: 'App'\r\n};\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string\r\n};\r\n\r\nexport { Header };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Subscription = (props) => (\r\n    <div className=\"subscription\">\r\n        {/*<span onClick={props.subscribe}>*/}\r\n            {/*<button type=\"button\" className=\"btn btn-primary\">Subscribe</button>*/}\r\n        {/*</span>*/}\r\n        {/*<span onClick={props.unsubscribe}>*/}\r\n            {/*<button type=\"button\" className=\"btn btn-secondary\">Unsubscribe</button>*/}\r\n        {/*</span>*/}\r\n    </div>\r\n);\r\n\r\nSubscription.propTypes = {\r\n    subscribe: PropTypes.func,\r\n    unsubscribe: PropTypes.func\r\n};\r\n\r\nexport { Subscription };","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nclass Chart extends Component {\r\n\r\n    createChart(){\r\n        let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n// Set up precision for numbers\r\n        chart.numberFormatter.numberFormat = \"#,###.####\";\r\n        chart.startDuration = 0;\r\n\r\n// Create axes\r\n        let xAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n        xAxis.dataFields.category = \"value\";\r\n//xAxis.renderer.grid.template.location = 0;\r\n        xAxis.renderer.minGridDistance = 50;\r\n        xAxis.renderer.labels.template.fontSize = 12;\r\n        xAxis.title.text = \"Price (BTC/ETH)\";\r\n\r\n        let yAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n        yAxis.title.text = \"Volume\";\r\n        yAxis.max = 40;\r\n        yAxis.min = 0;\r\n        yAxis.keepSelection = true;\r\n        yAxis.start = 0;\r\n        yAxis.end = 1;\r\n\r\n// Create series\r\n        let series = chart.series.push(new am4charts.StepLineSeries());\r\n        series.interpolationDuration = 0;\r\n        series.dataFields.categoryX = \"value\";\r\n        series.dataFields.valueY = \"bidstotalvolume\";\r\n        series.strokeWidth = 2;\r\n        series.stroke = am4core.color(\"#0f0\");\r\n        series.fill = series.stroke;\r\n        series.fillOpacity = 0.1;\r\n        series.tooltipText = \"Ask: [bold]{categoryX}[/]\\nTotal volume: [bold]{valueY}[/]\\nVolume: [bold]{bidsvolume}[/]\"\r\n\r\n        let series2 = chart.series.push(new am4charts.StepLineSeries());\r\n        series2.interpolationDuration = 0;\r\n        series2.dataFields.categoryX = \"value\";\r\n        series2.dataFields.valueY = \"askstotalvolume\";\r\n        series2.strokeWidth = 2;\r\n        series2.stroke = am4core.color(\"#f00\");\r\n        series2.fill = series2.stroke;\r\n        series2.fillOpacity = 0.1;\r\n        series2.tooltipText = \"Ask: [bold]{categoryX}[/]\\nTotal volume: [bold]{valueY}[/]\\nVolume: [bold]{asksvolume}[/]\"\r\n\r\n        let series3 = chart.series.push(new am4charts.ColumnSeries());\r\n        series3.interpolationDuration = 0;\r\n        series3.dataFields.categoryX = \"value\";\r\n        series3.dataFields.valueY = \"bidsvolume\";\r\n        series3.strokeWidth = 0;\r\n        series3.fill = am4core.color(\"#000\");\r\n        series3.fillOpacity = 0.2;\r\n\r\n        let series4 = chart.series.push(new am4charts.ColumnSeries());\r\n        series4.interpolationDuration = 0;\r\n        series4.dataFields.categoryX = \"value\";\r\n        series4.dataFields.valueY = \"asksvolume\";\r\n        series4.strokeWidth = 0;\r\n        series4.fill = am4core.color(\"#000\");\r\n        series4.fillOpacity = 0.2;\r\n\r\n// Add cursor\r\n        chart.cursor = new am4charts.XYCursor();\r\n        this.chart = chart;\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        let data = [];\r\n        // nextProps.bids.reverse();\r\n        nextProps.bids.sort(function (a, b) {\r\n            return a.value - b.value;\r\n        });\r\n        nextProps.asks.sort(function (a, b) {\r\n            return a.value - b.value;\r\n        });\r\n        data = nextProps.bids.slice(-40).concat(nextProps.asks.slice(0,40));\r\n        if(!this.chart && nextProps.bids.length && nextProps.asks.length){\r\n            this.createChart();\r\n            this.chart.data = data;\r\n        } else if(this.chart) {\r\n            this.chart.data = data;\r\n            // this.chart.validateData();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.doChart();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.chart) {\r\n            this.chart.dispose();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"row\"} style={{marginTop:\"20px\", position:\"relative\"}}>\r\n                <div className=\"col-md-12\" style={{ position: \"absolute\", height:\"400px\", width:\"100%\", paddingTop:\"70px\"}}>\r\n                    <div className=\"row\">\r\n                        <div\r\n                            className=\"col-md-4 text-right\"\r\n                            style={{color: \"#5cb85c\"}}\r\n                        >\r\n                            bid\r\n                        </div>\r\n                        <div\r\n                            className=\"col-md-4 text-center\"\r\n                            style={{fontSize:\"20px\", fontWeight:\"bold\"}}\r\n                        >\r\n                            mid\r\n                        </div>\r\n                        <div\r\n                            className=\"col-md-4 text-left\"\r\n                            style={{color: \"#d44d3d\"}}\r\n                        >\r\n                            ask\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 text-right\">Buy</div>\r\n                        <div\r\n                            className=\"col-md-4 text-center\">Spread\r\n                        </div>\r\n                        <div className=\"col-md-4 text-left\">Sell</div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"chartdiv\"className=\"col-md-12\" style={{ width: \"100%\", height: \"400px\" }}></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nChart.propTypes = {\r\n};\r\n\r\nexport { Chart };","import numeral from \"numeral\";\r\n\r\nexport class Utils {\r\n\r\n    formatNumber(number, decimalPlaces, k){\r\n        var formattedNumber = +number.toFixed(6);\r\n        if(formattedNumber > 10000 && k){\r\n            formattedNumber = numeral(formattedNumber).format(\"0,0.\"+\"0\".repeat(decimalPlaces)+\"a\");\r\n        } else {\r\n            formattedNumber = numeral(formattedNumber).format(\"0,0.\"+\"0\".repeat(decimalPlaces));\r\n        }\r\n        return formattedNumber;\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport {Chart} from './Chart';\r\nimport { Utils } from '../../services/Utils';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nconst utils = new Utils();\r\n\r\nclass Stats extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleState = this.toggleState.bind(this);\r\n        this.toggleDirection = this.toggleDirection.bind(this);\r\n        this.state = {\r\n            updated: false,\r\n            priceImpactVolume: 10,\r\n            toggle: 'sell',\r\n            direction: 'to'\r\n        };\r\n        this.stats = {\r\n            spread: {\r\n                midpoint: 0,\r\n                high: 0,\r\n                low: 0\r\n            },\r\n            depth: {\r\n                bids: {},\r\n                asks: {}\r\n            },\r\n            impact: {\r\n                buy: 0,\r\n                sell: 0,\r\n                averageBuyPrice: 0,\r\n                averageSellPrice: 0\r\n            },\r\n        }\r\n    }\r\n\r\n    toggleState(e) {\r\n        this.setState({\r\n            toggle: e.target.value\r\n        });\r\n    }\r\n    toggleDirection(e) {\r\n        this.setState({\r\n            direction: e.target.value\r\n        });\r\n    }\r\n\r\n    getSpread(bids, asks){\r\n        var lastBid = bids[0]/100;\r\n        var firstAsk = asks[0]/100;\r\n        var midpoint = parseFloat(lastBid) + ((firstAsk - lastBid )/ 2);\r\n        return {\r\n            high: lastBid,\r\n            low: firstAsk,\r\n            midpoint: midpoint\r\n        }\r\n    }\r\n\r\n    getDepth(bids, asks, percentage){\r\n        var midpoint = this.getSpread(bids, asks).midpoint;\r\n        var lowerLimit = midpoint - (midpoint*(percentage/100));\r\n        var upperLimit = midpoint + (midpoint*(percentage/100));\r\n\r\n        var bidDepthVolFrom = 0;\r\n        var bidDepthVolTo = 0;\r\n        for(var bid of bids){\r\n            if(bid/100 > lowerLimit){\r\n                bidDepthVolFrom += this.bidsMap[bid].bidsvolume;\r\n                bidDepthVolTo += this.bidsMap[bid].bidsvolume*this.bidsMap[bid].value;\r\n            }\r\n        }\r\n        var askDepthVolFrom = 0;\r\n        var askDepthVolTo = 0;\r\n        for(var ask of asks){\r\n            if(ask/100 < upperLimit){\r\n                askDepthVolFrom += this.asksMap[ask].asksvolume;\r\n                askDepthVolTo += this.asksMap[ask].asksvolume*this.asksMap[ask].value;\r\n            }\r\n        }\r\n        return {\r\n            sell :{\r\n                to: bidDepthVolTo,\r\n                from: bidDepthVolFrom\r\n            },\r\n            buy :{\r\n                to: askDepthVolTo,\r\n                from: askDepthVolFrom\r\n            }\r\n        }\r\n    }\r\n\r\n    getPriceImpact(bids, asks){\r\n        var impact = {buy: 0, sell:0, average:{buy: 0, sell:0}};\r\n        if(!this.state.priceImpactVolume){\r\n            return impact;\r\n        }\r\n        var midpoint = this.getSpread(bids, asks).midpoint;\r\n        var bidAverage =0, bidTotalVol = 0;\r\n        var askAverage =0, askTotalVol = 0;\r\n        var side = this.state.direction;\r\n        for(var bid of bids){\r\n            impact.sell = this.bidsMap[bid].value - midpoint;\r\n            if(this.bidsMap[bid].bidstotalvolume[side] > this.state.priceImpactVolume) {\r\n                bidAverage += (this.state.priceImpactVolume - bidTotalVol) * this.bidsMap[bid].value;\r\n                bidTotalVol = this.bidsMap[bid].bidstotalvolume[side];\r\n                break;\r\n            }\r\n            bidTotalVol = this.bidsMap[bid].bidstotalvolume.to;\r\n            bidAverage += (this.bidsMap[bid].bidsvolume * this.bidsMap[bid].value);\r\n        }\r\n        for(var ask of asks){\r\n            impact.buy = this.asksMap[ask].value - midpoint;\r\n            if(this.asksMap[ask].askstotalvolume[side] > this.state.priceImpactVolume) {\r\n                askAverage += ((this.state.priceImpactVolume - askTotalVol) * this.asksMap[ask].value)\r\n                askTotalVol = this.asksMap[ask].askstotalvolume[side];\r\n                break;\r\n            }\r\n            askTotalVol = this.asksMap[ask].askstotalvolume[side];\r\n            askAverage += (this.asksMap[ask].asksvolume * this.asksMap[ask].value);\r\n        }\r\n        impact.average = {\r\n            sell: bidAverage / Math.min(bidTotalVol, this.state.priceImpactVolume),\r\n            buy: askAverage / Math.min(askTotalVol, this.state.priceImpactVolume)\r\n        };\r\n        return impact;\r\n    }\r\n\r\n    getStats(){\r\n        var stats = {};\r\n        this.bidsMap = this.props.orders[0];\r\n        this.asksMap = this.props.orders[1];\r\n        var bids = Object.keys(this.props.orders[0]);\r\n        var asks = Object.keys(this.props.orders[1]);\r\n        bids.sort(function (a, b) {\r\n            return b - a;\r\n        });\r\n        asks.sort(function (a, b) {\r\n            return a - b;\r\n        });\r\n        stats.spread = this.getSpread(bids, asks);\r\n        stats.depth = this.getDepth(bids, asks, 10);\r\n        stats.impact = this.getPriceImpact(bids, asks, 0.5);\r\n        this.stats = stats;\r\n    }\r\n\r\n    handleChange = (e) =>{\r\n        this.setState({priceImpactVolume: e.target.value});\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.orders || !Object.keys(this.props.orders[0]).length || !Object.keys(this.props.orders[0]).length){\r\n            return <div />;\r\n        }\r\n        this.getStats();\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"panel-body\">\r\n                    {/*<Chart bids={this.props.orders[0] ? Object.values(this.props.orders[0]): []} asks={this.props.orders[1] ? Object.values(this.props.orders[1]): []} />*/}\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md\">\r\n                            <form className=\"switch-field\">\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    id=\"switch_left\"\r\n                                    name=\"switchToggle\"\r\n                                    value=\"buy\"\r\n                                    onChange={this.toggleState}\r\n                                    checked={this.state.toggle=='buy'}\r\n                                />\r\n                                <label htmlFor=\"switch_left\">Buy</label>\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    id=\"switch_right\"\r\n                                    name=\"switchToggle\"\r\n                                    value=\"sell\"\r\n                                    onChange={this.toggleState}\r\n                                    checked={this.state.toggle=='sell'}\r\n                                />\r\n                                <label htmlFor=\"switch_right\">Sell</label>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"col-md\">\r\n                            <form className=\"switch-field direction\">\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    id=\"switch_direction_to\"\r\n                                    name=\"switchToggle\"\r\n                                    value=\"from\"\r\n                                    onChange={this.toggleDirection}\r\n                                    checked={this.state.direction=='from'}\r\n                                />\r\n                                <label htmlFor=\"switch_direction_to\"><i className=\"fa fa-exchange\"></i>BTC</label>\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    id=\"switch_direction_from\"\r\n                                    name=\"switchToggle\"\r\n                                    value=\"to\"\r\n                                    onChange={this.toggleDirection}\r\n                                    checked={this.state.direction=='to'}\r\n                                />\r\n                                <label htmlFor=\"switch_direction_from\"><i className=\"fa fa-exchange\"></i>USDT</label>\r\n                            </form>\r\n                            <input className=\"form-control price-impact\" type=\"text\" value={this.state.priceImpactVolume} onChange={this.handleChange}/>\r\n                        </div>\r\n                        <div className=\"col-md\">\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md col-stat\">\r\n                            <div className=\"stat-wrapper\">\r\n                                <div className=\"stat-label\">\r\n                                    10% Bid Depth\r\n                                </div>\r\n                                <div className=\"stat-data\">\r\n                                    Ƀ {utils.formatNumber(this.stats.depth[this.state.toggle].from, 2, true)}\r\n                                    ( ₮ {utils.formatNumber(this.stats.depth[this.state.toggle].to, 2, true)} )\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md col-stat\">\r\n                            <div className=\"stat-wrapper\">\r\n                                <div className=\"stat-label\">\r\n                                    Price Impact\r\n                                </div>\r\n                                <div className={`stat-data ${this.stats.impact[this.state.toggle] >= 0 ? 'up-text' : 'down-text'}`}>\r\n                                    ₮ {utils.formatNumber(this.stats.impact[this.state.toggle], 3, true)}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md col-stat\">\r\n                            <div className=\"stat-wrapper\">\r\n                                <div className=\"stat-label\">\r\n                                    Price Impact %\r\n                                </div>\r\n                                <div className={`stat-data ${this.stats.impact[this.state.toggle] >= 0 ? 'up-text' : 'down-text'}`}>\r\n                                    { utils.formatNumber((this.stats.impact[this.state.toggle] / this.stats.spread.midpoint) * 100, 3, true) || 0 }%\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md\">\r\n                            <div className=\"stat-wrapper\">\r\n                                <div className=\"stat-label\">\r\n                                    Average Price\r\n                                </div>\r\n                                <div className=\"stat-data\">\r\n                                    ₮ {utils.formatNumber(this.stats.impact.average[this.state.toggle], 2, true)}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className={\"col-md\"}>\r\n                        </div>\r\n                        <div className=\"col-md\">\r\n                            Highest bid: <span className={\"up-text\"}>{utils.formatNumber(this.stats.spread.high, 2, true)}</span>\r\n                        </div>\r\n                        <div className=\"col-md\">\r\n                            <div>\r\n                                Midpoint: {utils.formatNumber(this.stats.spread.midpoint, 3, true)}\r\n                            </div>\r\n                            <div>\r\n                                Spread: {utils.formatNumber(this.stats.spread.low - this.stats.spread.high, 3, true)}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md\">\r\n                            Lowest ask: <span className={\"down-text\"}>{utils.formatNumber(this.stats.spread.low, 2, true)}</span>\r\n                        </div>\r\n                        <div className={\"col-md\"}>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nStats.propTypes = {\r\n};\r\n\r\nexport { Stats };","import React, { Component } from \"react\";\r\nimport { Utils } from '../../services/Utils';\r\nconst utils = new Utils();\r\n\r\nclass OrderRow extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render() {\r\n        if(!this.updated && this.props.lastUpdated.indexOf(Number(this.props.order.value)) !== -1){\r\n            this.updated = true;\r\n            var c = this;\r\n            setTimeout(function(){\r\n                c.updated = false;\r\n            }, 100);\r\n        }\r\n        this.price = this.props.order.value;\r\n        this.volume = this.props.order.bidsvolume || this.props.order.asksvolume;\r\n        this.tsymPrice = this.props.order.value * (this.props.order.bidsvolume || this.props.order.asksvolume || 0)\r\n        this.totalVolume = this.props.order.bidstotalvolume || this.props.order.askstotalvolume;\r\n        return (\r\n\r\n            <div className={\r\n                `row data-row ${this.updated ? 'highlight' : ''}`\r\n                }>\r\n                <div className=\"col-md\">\r\n                    {utils.formatNumber(this.price, 2)}\r\n                </div>\r\n                <div className=\"col-md\">\r\n                    {utils.formatNumber(this.volume, 6)}\r\n                </div>\r\n                <div className=\"col-md\">\r\n                    {utils.formatNumber(this.tsymPrice, 4, true)}\r\n                </div>\r\n                <div className=\"col-md\">\r\n                    {utils.formatNumber(this.totalVolume['from'],2, true)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nOrderRow.propTypes = {\r\n};\r\n\r\nexport { OrderRow };","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport Infinite from 'react-infinite';\r\nimport {OrderRow} from './OrderRow';\r\nimport { Utils } from '../../services/Utils';\r\nconst utils = new Utils();\r\n\r\nclass OrderTable extends Component {\r\n\r\n    getTableRows(props) {\r\n        if(props.title==='Buy'){\r\n            this.orderKeys.sort(function(a,b){return b-a});\r\n        } else {\r\n            this.orderKeys.sort(function(a,b){return a-b});\r\n        }\r\n        return this.orderKeys.map((key) => {\r\n            return (\r\n                <OrderRow lastUpdated={props.lastUpdated} order={props.orders[key]} key={key}/>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.orders){\r\n            return <div/>\r\n        }\r\n        var orderKeys = Object.keys(this.props.orders);\r\n        if(!orderKeys.length){\r\n            return <div/>;\r\n        }\r\n        if(this.props.title==='Buy'){\r\n            orderKeys.sort(function(a,b){return b-a});\r\n            var totalVolume = {\r\n                to: this.props.orders[orderKeys[orderKeys.length-1]].bidstotalvolume.to,\r\n                from: this.props.orders[orderKeys[orderKeys.length-1]].bidstotalvolume.from\r\n            };\r\n        } else {\r\n            orderKeys.sort(function(a,b){return a-b});\r\n            var totalVolume = {\r\n                to: this.props.orders[orderKeys[orderKeys.length-1]].askstotalvolume.to,\r\n                from: this.props.orders[orderKeys[orderKeys.length-1]].askstotalvolume.from\r\n            };\r\n        }\r\n        this.orderKeys = orderKeys;\r\n        return (\r\n        <div>\r\n            <div className={\"row\"}>\r\n                <div className=\"col-md\">\r\n                    Ƀ {utils.formatNumber(totalVolume.to, 2, true)}\r\n                </div>\r\n                <div className=\"col-md\">\r\n                    <h4>{this.props.title}</h4>\r\n                </div>\r\n                <div className=\"col-md\">\r\n                    ₮ {utils.formatNumber(totalVolume.from, 2, true)}\r\n                </div>\r\n            </div>\r\n            <div className=\"orderbook\">\r\n                <div className=\"row title-row\">\r\n                    <div className=\"col-md\">\r\n                        Price\r\n                    </div>\r\n                    <div className=\"col-md\">\r\n                        BTC\r\n                    </div>\r\n                    <div className=\"col-md\">\r\n                        USDT\r\n                    </div>\r\n                    <div className=\"col-md\">\r\n                        Sum(USDT)\r\n                    </div>\r\n                </div>\r\n                <Infinite containerHeight={400} elementHeight={21}>\r\n                    {this.getTableRows(this.props)}\r\n                </Infinite>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nOrderTable.propTypes = {\r\n    title: PropTypes.string\r\n};\r\n\r\nexport { OrderTable };","import React, { Component} from 'react';\r\nimport {Stats} from './Stats';\r\nimport {OrderTable} from './OrderTable';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Display extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            orders: [],\r\n            lastUpdated: [],\r\n        };\r\n    }\r\n\r\n    // componentDidUpdate(prevProps) {\r\n    //     console.log(\"orders\", this.props.orders); //test\r\n    //     this.setState({ orders: this.props.orders});\r\n    // }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        // console.log(\"Should display update?\");\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Stats orders={this.props.orders}></Stats>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <OrderTable orders={this.props.orders[0]} lastUpdated={this.props.lastUpdated} title='Buy' />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <OrderTable orders={this.props.orders[1]} lastUpdated={this.props.lastUpdated} title='Sell'/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nDisplay.propTypes = {\r\n};\r\n\r\nexport { Display };","import { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nconst client = new W3CWebSocket('wss://streamer.cryptocompare.com/v2?api_key=66cdac0fc6a565b41a9ecd3549784e14fdc851c2f2bc88f7f1f18019b170cd44');\r\n\r\nexport class OrderbookService {\r\n\r\n    snapshot = {0:{},1:{}};\r\n    lastUpdated = [];\r\n    depth = 2000000;\r\n\r\n    processData(list, type, desc) {\r\n        // Convert to data points\r\n        let res = {};\r\n        for(var i = 0; i < list.length; i++) {\r\n            list[i] = {\r\n                value: Number(list[i]['P']),\r\n                volume: Number(list[i][['Q']]),\r\n            }\r\n        }\r\n        // Sort list just in case\r\n        list.sort(function(a, b) {\r\n            if (a.value > b.value) {\r\n                return 1;\r\n            }\r\n            else if (a.value < b.value) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        });\r\n        // Calculate cummulative volume\r\n        if (desc) {\r\n            for(var i = list.length - 1; i >= 0; i--) {\r\n                if (i < (list.length - 1)) {\r\n                    list[i].totalvolume = {\r\n                        to: list[i+1].totalvolume.to + list[i].volume,\r\n                        from: list[i+1].totalvolume.from + (list[i].volume * list[i].value)\r\n                    };\r\n                }\r\n                else {\r\n                    list[i].totalvolume = {\r\n                        to: list[i].volume,\r\n                        from: list[i].volume * list[i].value\r\n                    };\r\n                }\r\n                let dp = {};\r\n                dp[\"value\"] = list[i].value;\r\n                dp[type + \"volume\"] = list[i].volume;\r\n                dp[type + \"totalvolume\"] = list[i].totalvolume;\r\n                res[list[i].value*100] = dp;\r\n            }\r\n            var ordered = {};\r\n            Object.keys(res).sort(function (a, b) {\r\n                return a-b;\r\n            }).forEach(function(key) {\r\n                ordered[key] = res[key];\r\n            });\r\n        }\r\n        else {\r\n            for(var i = 0; i < list.length; i++) {\r\n                if (i > 0) {\r\n                    list[i].totalvolume = {\r\n                        to: list[i-1].totalvolume.to + list[i].volume,\r\n                        from: list[i-1].totalvolume.from + (list[i].volume * list[i].value)\r\n                    };\r\n                }\r\n                else {\r\n                    list[i].totalvolume = {\r\n                        to: list[i].volume,\r\n                        from: list[i].volume * list[i].value\r\n                    };\r\n                }\r\n                let dp = {};\r\n                dp[\"value\"] = list[i].value;\r\n                dp[type + \"volume\"] = list[i].volume;\r\n                dp[type + \"totalvolume\"] = list[i].totalvolume;\r\n                res[list[i].value*100] = dp\r\n            }\r\n            var ordered = {};\r\n            Object.keys(res).sort(function (a, b) {\r\n                return b-a;\r\n            }).forEach(function(key) {\r\n                ordered[key] = res[key];\r\n            });\r\n        }\r\n        return ordered;\r\n    }\r\n\r\n    populateSnapshot(snapshot, callback) {\r\n\r\n        snapshot.BID.map((item, key) => {\r\n            this.snapshot[0][item.P*100] = {\r\n                Q: item.Q,\r\n                P: String(item.P)\r\n            };\r\n        });\r\n        snapshot.ASK.map((item, key) => {\r\n            this.snapshot[1][item.P*100] = {\r\n                Q: item.Q,\r\n                P: String(item.P)\r\n            };\r\n        });\r\n\r\n        var bidKeys = Object.keys(this.snapshot[0]).sort().slice(-this.depth);\r\n        var topBids = [];\r\n        for(var bidKey of bidKeys){\r\n            topBids.push(this.snapshot[0][bidKey]);\r\n        }\r\n        var askKeys = Object.keys(this.snapshot[1]).slice(0,this.depth);\r\n        var topAsks = [];\r\n        for(var askKey of askKeys){\r\n            topAsks.push(this.snapshot[1][askKey]);\r\n        }\r\n        let bids = this.processData(topBids, 'bids', true);\r\n        let asks = this.processData(topAsks, 'asks',  false);\r\n\r\n        callback({orders: {0: bids, 1: asks}, lastUpdated: this.lastUpdated});\r\n    }\r\n\r\n    getLastUpdated(){\r\n        return this.lastUpdated;\r\n    }\r\n    resetLastUpdated(){\r\n        this.lastUpdated = [];\r\n    }\r\n\r\n    getSnapshot(){\r\n        var bidKeys = Object.keys(this.snapshot[0]).sort().slice(-this.depth);\r\n        var topBids = [];\r\n        for(var bidKey of bidKeys){\r\n            topBids.push(this.snapshot[0][bidKey]);\r\n        }\r\n        var askKeys = Object.keys(this.snapshot[1]).slice(0,this.depth);\r\n        var topAsks = [];\r\n        for(var askKey of askKeys){\r\n            topAsks.push(this.snapshot[1][askKey]);\r\n        }\r\n        let bids = this.processData(topBids, 'bids', true);\r\n        let asks = this.processData(topAsks, 'asks',  false);\r\n        return {0: bids, 1: asks};\r\n    }\r\n\r\n    updateSnapshot(update, callback){\r\n        if(update.ACTION == 1){\r\n            this.snapshot[update.SIDE][update.P*100] = {'P': update.P, 'Q': update.Q};\r\n            this.lastUpdated.push(update.P);\r\n        }\r\n        if(this.snapshot[update.SIDE][update.P*100] == undefined){\r\n            console.error(\"No price \", update.P, \" found on side \", update.SIDE, ' to perform action ', update.ACTION);\r\n            return;\r\n        }\r\n        if(update.ACTION == 2){\r\n           // this.snapshot[update.SIDE][update.P]['Q'] = 0;\r\n           delete this.snapshot[update.SIDE][update.P*100];\r\n        }\r\n        if(update.ACTION == 4){\r\n            this.snapshot[update.SIDE][update.P*100]['Q'] = update.Q;\r\n            this.lastUpdated.push(update.P);\r\n        }\r\n\r\n        // var bidKeys = Object.keys(this.snapshot[0]).sort().slice(-this.depth);\r\n        // var topBids = [];\r\n        // for(var bidKey of bidKeys){\r\n        //     topBids.push(this.snapshot[0][bidKey]);\r\n        // }\r\n        // var askKeys = Object.keys(this.snapshot[1]).slice(0,this.depth);\r\n        // var topAsks = [];\r\n        // for(var askKey of askKeys){\r\n        //     topAsks.push(this.snapshot[1][askKey]);\r\n        // }\r\n        //\r\n        // let bids = this.processData(topBids, 'bids', true);\r\n        // let asks = this.processData(topAsks, 'asks',  false);\r\n        // callback({orders: {0: bids, 1: asks}, lastUpdated: this.lastUpdated});\r\n    }\r\n\r\n    subscribe(callback) {\r\n        console.log('Subscribing');\r\n        client.onopen = () => {\r\n            client.send(JSON.stringify({\r\n                action: 'SubAdd',\r\n                subs: [\"8~Binance~BTC~USDT\"],\r\n                api_key: '66cdac0fc6a565b41a9ecd3549784e14fdc851c2f2bc88f7f1f18019b170cd44',\r\n            }));\r\n        };\r\n        client.onmessage = (message) => {\r\n            if(message.data){\r\n                let msg = JSON.parse(message.data);\r\n                // console.log(msg);\r\n                if(msg.TYPE == 9){\r\n                    this.populateSnapshot(msg, callback);\r\n                }\r\n                if(msg.TYPE == 8){\r\n                    this.updateSnapshot(msg);\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    unsubscribe(currency) {\r\n        console.log('Unsubscribing');\r\n        client.close();\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Subscription } from './Subscription';\r\nimport { Display } from './Display';\r\nimport { OrderbookService } from '../../services/OrderbookService';\r\nconst orderbookService = new OrderbookService();\r\n\r\nclass OrderbookStreamer extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            orders: 0,\r\n            lastUpdated: 0,\r\n        };\r\n        this.subscribe();\r\n    }\r\n\r\n    subscribe() {\r\n\r\n        let currentComponent = this;\r\n         setInterval(function(){\r\n            currentComponent.setState(prevState => {\r\n                return { orders: orderbookService.getSnapshot(), lastUpdated: orderbookService.getLastUpdated() }\r\n            });\r\n            orderbookService.resetLastUpdated();\r\n        }, 100);\r\n\r\n        currentComponent.callback = (data) => {\r\n            this.setState(prevState => {\r\n                return {orders: data.orders,\r\n                    lastUpdated: orderbookService.getLastUpdated()};\r\n            });\r\n            orderbookService.resetLastUpdated();\r\n        }\r\n\r\n        orderbookService\r\n            .subscribe( currentComponent.callback );\r\n    }\r\n\r\n    changeSubscription(event){\r\n\r\n    }\r\n\r\n    handleUnsubscribe(event) {\r\n        orderbookService\r\n            .unsubscribe();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Subscription\r\n                    subscribe={this.changeSubscription.bind(this)}\r\n                />\r\n                <Display orders={this.state.orders} lastUpdated={this.state.lastUpdated}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { OrderbookStreamer };","import React from 'react';\r\nimport { Header } from './components/Header';\r\nimport { OrderbookStreamer } from \"./components/OrderbookStreamer/OrderbookStreamer\";\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <Header title='CryptoCompare Orderbook L2 Streamer' />\r\n        <OrderbookStreamer lastUpdated={0}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}