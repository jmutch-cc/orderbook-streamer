{"version":3,"sources":["logo.svg","components/Header.js","components/OrderbookStreamer/Subscription.js","components/OrderbookStreamer/Chart.js","services/Utils.js","components/OrderbookStreamer/Stats.js","components/OrderbookStreamer/OrderRow.js","components/OrderbookStreamer/OrderTable.js","components/OrderbookStreamer/Display.js","services/OrderbookService.js","components/OrderbookStreamer/OrderbookStreamer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","style","overflowX","title","defaultProps","Subscription","selectExchange","bind","selectFsym","selectTsym","subscribe","state","exchanges","fSyms","tSyms","fSym","tSym","exchange","axios","get","then","res","setState","data","Data","pairs","tsyms","e","target","value","this","onChange","name","id","Object","keys","map","key","onClick","type","Component","am4core","am4themes_animated","Utils","number","decimalPlaces","k","formattedNumber","toFixed","numeral","format","repeat","utils","Stats","handleChange","priceImpactVolume","toggleState","toggleDirection","updated","toggle","direction","stats","spread","midpoint","high","low","depth","bids","asks","impact","buy","sell","averageBuyPrice","averageSellPrice","lastBid","firstAsk","parseFloat","percentage","getSpread","lowerLimit","upperLimit","bidDepthVolFrom","bidDepthVolTo","bid","bidsMap","bidsvolume","askDepthVolFrom","askDepthVolTo","ask","asksMap","asksvolume","to","from","average","bidAverage","bidTotalVol","askAverage","askTotalVol","side","bidstotalvolume","askstotalvolume","Math","min","orders","sort","a","b","getDepth","getPriceImpact","length","getStats","checked","htmlFor","formatNumber","OrderRow","lastUpdated","indexOf","Number","order","c","setTimeout","price","volume","tsymPrice","totalVolume","OrderTable","containerHeight","elementHeight","getTableRows","Display","bidKeys","askKeys","clientUrl","client","W3CWebSocket","orderbookService","snapshot","0","1","list","desc","i","totalvolume","dp","ordered","forEach","callback","BID","item","P","Q","String","ASK","getSnapshot","slice","topBids","bidKey","push","topAsks","askKey","processData","update","ACTION","SIDE","undefined","console","error","log","onopen","send","JSON","stringify","action","subs","api_key","onmessage","message","msg","parse","TYPE","populateSnapshot","updateSnapshot","currency","resetLastUpdated","resetSnapshot","close","OrderbookStreamer","changeSubscription","currentComponent","setInterval","prevState","getLastUpdated","unsubscribe","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.4ede3746.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = (props) => (\r\n    <nav className=\"header navbar navbar-dark bg-dark\" style={{overflowX: 'hidden'}}>\r\n        <div className=\"text-center mx-auto\">\r\n            <div className=\"\">\r\n                <div className=\"h3 ml-3 my-auto text-light d-inline-block\">{props.title}</div>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n);\r\n\r\nHeader.defaultProps = {\r\n    title: 'App'\r\n};\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string\r\n};\r\n\r\nexport { Header };","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\n\r\nclass Subscription extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.selectExchange = this.selectExchange.bind(this);\r\n        this.selectFsym = this.selectFsym.bind(this);\r\n        this.selectTsym = this.selectTsym.bind(this);\r\n        this.subscribe = this.subscribe.bind(this);\r\n        this.state = {\r\n            exchanges: {},\r\n            fSyms: {},\r\n            tSyms: {},\r\n            fSym: props.fSym,\r\n            tSym: props.tSym,\r\n            exchange: props.exchange,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(`https://min-api.cryptocompare.com/data/v4/all/exchanges?topTier=true`)\r\n            .then(res => {\r\n                this.setState({ exchanges: res.data.Data.exchanges });\r\n                this.setState({\r\n                    fSyms: this.state.exchanges[this.state.exchange].pairs,\r\n                    tSyms: this.state.exchanges[this.state.exchange].pairs[this.state.fSym].tsyms\r\n                });\r\n            });\r\n    }\r\n\r\n    selectExchange(e){\r\n        let exchange = e.target.value;\r\n        this.setState({ exchange: exchange, fSyms: this.state.exchanges[exchange].pairs})\r\n    }\r\n\r\n    selectFsym(e){\r\n        let fSym = e.target.value;\r\n        this.setState({ fSym: fSym, tSyms: this.state.exchanges[this.state.exchange].pairs[fSym].tsyms})\r\n    }\r\n\r\n    selectTsym(e){\r\n        let tSym = e.target.value;\r\n        this.setState({ tSym: tSym})\r\n    }\r\n\r\n    subscribe(){\r\n        this.props.subscribe(this.state.exchange, this.state.fSym, this.state.tSym);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"subscription row\">\r\n                <div className={\"col-md-2\"} />\r\n                <select className={\"browser-default custom-select col-md\"} value={this.state.exchange} onChange={this.selectExchange} name=\"exchanges\" id=\"exchanges\">\r\n                    {Object.keys(this.state.exchanges).map(exchange =>\r\n                        <option key={exchange}>{exchange}</option>\r\n                    )}\r\n                </select>\r\n                <select className={\"browser-default custom-select col-md\"} value={this.state.fSym} onChange={this.selectFsym} name=\"fSym\" id=\"fSym\">\r\n                    {Object.keys(this.state.fSyms).map(fSym =>\r\n                        <option key={fSym}>{fSym}</option>\r\n                    )}\r\n                </select>\r\n                <select className={\"browser-default custom-select col-md\"} value={this.state.tSym} onChange={this.selectTsym} name=\"tSym\" id=\"tSym\">\r\n                    {Object.keys(this.state.tSyms).map(tSym =>\r\n                        <option key={tSym}>{tSym}</option>\r\n                    )}\r\n                </select>\r\n                <span className={\"col-md\"} onClick={this.subscribe}>\r\n                    <button type=\"button\" className=\"btn btn-primary\">Subscribe</button>\r\n                </span>\r\n                <div className={\"col-md-2\"} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nSubscription.propTypes = {\r\n    subscribe: PropTypes.func,\r\n    unsubscribe: PropTypes.func\r\n};\r\n\r\nexport { Subscription };","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nclass Chart extends Component {\r\n\r\n    createChart(){\r\n        let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n// Set up precision for numbers\r\n        chart.numberFormatter.numberFormat = \"#,###.####\";\r\n        chart.startDuration = 0;\r\n\r\n// Create axes\r\n        let xAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n        xAxis.dataFields.category = \"value\";\r\n//xAxis.renderer.grid.template.location = 0;\r\n        xAxis.renderer.minGridDistance = 50;\r\n        xAxis.renderer.labels.template.fontSize = 12;\r\n        xAxis.title.text = \"Price (BTC/ETH)\";\r\n\r\n        let yAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n        yAxis.title.text = \"Volume\";\r\n        yAxis.max = 40;\r\n        yAxis.min = 0;\r\n        yAxis.keepSelection = true;\r\n        yAxis.start = 0;\r\n        yAxis.end = 1;\r\n\r\n// Create series\r\n        let series = chart.series.push(new am4charts.StepLineSeries());\r\n        series.interpolationDuration = 0;\r\n        series.dataFields.categoryX = \"value\";\r\n        series.dataFields.valueY = \"bidstotalvolume\";\r\n        series.strokeWidth = 2;\r\n        series.stroke = am4core.color(\"#0f0\");\r\n        series.fill = series.stroke;\r\n        series.fillOpacity = 0.1;\r\n        series.tooltipText = \"Ask: [bold]{categoryX}[/]\\nTotal volume: [bold]{valueY}[/]\\nVolume: [bold]{bidsvolume}[/]\"\r\n\r\n        let series2 = chart.series.push(new am4charts.StepLineSeries());\r\n        series2.interpolationDuration = 0;\r\n        series2.dataFields.categoryX = \"value\";\r\n        series2.dataFields.valueY = \"askstotalvolume\";\r\n        series2.strokeWidth = 2;\r\n        series2.stroke = am4core.color(\"#f00\");\r\n        series2.fill = series2.stroke;\r\n        series2.fillOpacity = 0.1;\r\n        series2.tooltipText = \"Ask: [bold]{categoryX}[/]\\nTotal volume: [bold]{valueY}[/]\\nVolume: [bold]{asksvolume}[/]\"\r\n\r\n        let series3 = chart.series.push(new am4charts.ColumnSeries());\r\n        series3.interpolationDuration = 0;\r\n        series3.dataFields.categoryX = \"value\";\r\n        series3.dataFields.valueY = \"bidsvolume\";\r\n        series3.strokeWidth = 0;\r\n        series3.fill = am4core.color(\"#000\");\r\n        series3.fillOpacity = 0.2;\r\n\r\n        let series4 = chart.series.push(new am4charts.ColumnSeries());\r\n        series4.interpolationDuration = 0;\r\n        series4.dataFields.categoryX = \"value\";\r\n        series4.dataFields.valueY = \"asksvolume\";\r\n        series4.strokeWidth = 0;\r\n        series4.fill = am4core.color(\"#000\");\r\n        series4.fillOpacity = 0.2;\r\n\r\n// Add cursor\r\n        chart.cursor = new am4charts.XYCursor();\r\n        this.chart = chart;\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        let data = [];\r\n        // nextProps.bids.reverse();\r\n        nextProps.bids.sort(function (a, b) {\r\n            return a.value - b.value;\r\n        });\r\n        nextProps.asks.sort(function (a, b) {\r\n            return a.value - b.value;\r\n        });\r\n        data = nextProps.bids.slice(-40).concat(nextProps.asks.slice(0,40));\r\n        if(!this.chart && nextProps.bids.length && nextProps.asks.length){\r\n            this.createChart();\r\n            this.chart.data = data;\r\n        } else if(this.chart) {\r\n            this.chart.data = data;\r\n            // this.chart.validateData();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.doChart();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.chart) {\r\n            this.chart.dispose();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"row\"} style={{marginTop:\"20px\", position:\"relative\"}}>\r\n                <div className=\"col-md-12\" style={{ position: \"absolute\", height:\"400px\", width:\"100%\", paddingTop:\"70px\"}}>\r\n                    <div className=\"row\">\r\n                        <div\r\n                            className=\"col-md-4 text-right\"\r\n                            style={{color: \"#5cb85c\"}}\r\n                        >\r\n                            bid\r\n                        </div>\r\n                        <div\r\n                            className=\"col-md-4 text-center\"\r\n                            style={{fontSize:\"20px\", fontWeight:\"bold\"}}\r\n                        >\r\n                            mid\r\n                        </div>\r\n                        <div\r\n                            className=\"col-md-4 text-left\"\r\n                            style={{color: \"#d44d3d\"}}\r\n                        >\r\n                            ask\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 text-right\">Buy</div>\r\n                        <div\r\n                            className=\"col-md-4 text-center\">Spread\r\n                        </div>\r\n                        <div className=\"col-md-4 text-left\">Sell</div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"chartdiv\"className=\"col-md-12\" style={{ width: \"100%\", height: \"400px\" }}></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nChart.propTypes = {\r\n};\r\n\r\nexport { Chart };","import numeral from \"numeral\";\r\n\r\nexport class Utils {\r\n\r\n    formatNumber(number, decimalPlaces, k){\r\n        var formattedNumber = +number.toFixed(6);\r\n        if(formattedNumber > 10000 && k){\r\n            formattedNumber = numeral(formattedNumber).format(\"0,0.\"+\"0\".repeat(decimalPlaces)+\"a\");\r\n        } else {\r\n            formattedNumber = numeral(formattedNumber).format(\"0,0.\"+\"0\".repeat(decimalPlaces));\r\n        }\r\n        return formattedNumber;\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport {Chart} from './Chart';\r\nimport { Utils } from '../../services/Utils';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nconst utils = new Utils();\r\n\r\nclass Stats extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleState = this.toggleState.bind(this);\r\n        this.toggleDirection = this.toggleDirection.bind(this);\r\n        this.state = {\r\n            updated: false,\r\n            priceImpactVolume: 10,\r\n            toggle: 'sell',\r\n            direction: 'to'\r\n        };\r\n        this.stats = {\r\n            spread: {\r\n                midpoint: 0,\r\n                high: 0,\r\n                low: 0\r\n            },\r\n            depth: {\r\n                bids: {},\r\n                asks: {}\r\n            },\r\n            impact: {\r\n                buy: 0,\r\n                sell: 0,\r\n                averageBuyPrice: 0,\r\n                averageSellPrice: 0\r\n            },\r\n        }\r\n    }\r\n\r\n    toggleState(e) {\r\n        this.setState({\r\n            toggle: e.target.value\r\n        });\r\n    }\r\n    toggleDirection(e) {\r\n        this.setState({\r\n            direction: e.target.value\r\n        });\r\n    }\r\n\r\n    getSpread(bids, asks){\r\n        var lastBid = bids[0]/100;\r\n        var firstAsk = asks[0]/100;\r\n        var midpoint = parseFloat(lastBid) + ((firstAsk - lastBid )/ 2);\r\n        return {\r\n            high: lastBid,\r\n            low: firstAsk,\r\n            midpoint: midpoint\r\n        }\r\n    }\r\n\r\n    getDepth(bids, asks, percentage){\r\n        var midpoint = this.getSpread(bids, asks).midpoint;\r\n        var lowerLimit = midpoint - (midpoint*(percentage/100));\r\n        var upperLimit = midpoint + (midpoint*(percentage/100));\r\n\r\n        var bidDepthVolFrom = 0;\r\n        var bidDepthVolTo = 0;\r\n        for(var bid of bids){\r\n            if(bid/100 > lowerLimit){\r\n                bidDepthVolFrom += this.bidsMap[bid].bidsvolume;\r\n                bidDepthVolTo += this.bidsMap[bid].bidsvolume*this.bidsMap[bid].value;\r\n            }\r\n        }\r\n        var askDepthVolFrom = 0;\r\n        var askDepthVolTo = 0;\r\n        for(var ask of asks){\r\n            if(ask/100 < upperLimit){\r\n                askDepthVolFrom += this.asksMap[ask].asksvolume;\r\n                askDepthVolTo += this.asksMap[ask].asksvolume*this.asksMap[ask].value;\r\n            }\r\n        }\r\n        return {\r\n            sell :{\r\n                to: bidDepthVolTo,\r\n                from: bidDepthVolFrom\r\n            },\r\n            buy :{\r\n                to: askDepthVolTo,\r\n                from: askDepthVolFrom\r\n            }\r\n        }\r\n    }\r\n\r\n    getPriceImpact(bids, asks){\r\n        var impact = {buy: 0, sell:0, average:{buy: 0, sell:0}};\r\n        if(!this.state.priceImpactVolume){\r\n            return impact;\r\n        }\r\n        var midpoint = this.getSpread(bids, asks).midpoint;\r\n        var bidAverage =0, bidTotalVol = 0;\r\n        var askAverage =0, askTotalVol = 0;\r\n        var side = this.state.direction;\r\n        for(var bid of bids){\r\n            impact.sell = this.bidsMap[bid].value - midpoint;\r\n            if(this.bidsMap[bid].bidstotalvolume[side] > this.state.priceImpactVolume) {\r\n                bidAverage += (this.state.priceImpactVolume - bidTotalVol) * this.bidsMap[bid].value;\r\n                bidTotalVol = this.bidsMap[bid].bidstotalvolume[side];\r\n                break;\r\n            }\r\n            bidTotalVol = this.bidsMap[bid].bidstotalvolume.to;\r\n            bidAverage += (this.bidsMap[bid].bidsvolume * this.bidsMap[bid].value);\r\n        }\r\n        for(var ask of asks){\r\n            impact.buy = this.asksMap[ask].value - midpoint;\r\n            if(this.asksMap[ask].askstotalvolume[side] > this.state.priceImpactVolume) {\r\n                askAverage += ((this.state.priceImpactVolume - askTotalVol) * this.asksMap[ask].value)\r\n                askTotalVol = this.asksMap[ask].askstotalvolume[side];\r\n                break;\r\n            }\r\n            askTotalVol = this.asksMap[ask].askstotalvolume[side];\r\n            askAverage += (this.asksMap[ask].asksvolume * this.asksMap[ask].value);\r\n        }\r\n        impact.average = {\r\n            sell: bidAverage / Math.min(bidTotalVol, this.state.priceImpactVolume),\r\n            buy: askAverage / Math.min(askTotalVol, this.state.priceImpactVolume)\r\n        };\r\n        return impact;\r\n    }\r\n\r\n    getStats(){\r\n        var stats = {};\r\n        this.bidsMap = this.props.orders[0];\r\n        this.asksMap = this.props.orders[1];\r\n        var bids = Object.keys(this.props.orders[0]);\r\n        var asks = Object.keys(this.props.orders[1]);\r\n        bids.sort(function (a, b) {\r\n            return b - a;\r\n        });\r\n        asks.sort(function (a, b) {\r\n            return a - b;\r\n        });\r\n        stats.spread = this.getSpread(bids, asks);\r\n        stats.depth = this.getDepth(bids, asks, 10);\r\n        stats.impact = this.getPriceImpact(bids, asks, 0.5);\r\n        this.stats = stats;\r\n    }\r\n\r\n    handleChange = (e) =>{\r\n        this.setState({priceImpactVolume: e.target.value});\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.orders || !Object.keys(this.props.orders[0]).length || !Object.keys(this.props.orders[0]).length){\r\n            return <div />;\r\n        }\r\n        this.getStats();\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"panel-body\">\r\n                    {/*<Chart bids={this.props.orders[0] ? Object.values(this.props.orders[0]): []} asks={this.props.orders[1] ? Object.values(this.props.orders[1]): []} />*/}\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md\">\r\n                            <form className=\"switch-field\">\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    id=\"switch_left\"\r\n                                    name=\"switchToggle\"\r\n                                    value=\"buy\"\r\n                                    onChange={this.toggleState}\r\n                                    checked={this.state.toggle=='buy'}\r\n                                />\r\n                                <label htmlFor=\"switch_left\">Buy</label>\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    id=\"switch_right\"\r\n                                    name=\"switchToggle\"\r\n                                    value=\"sell\"\r\n                                    onChange={this.toggleState}\r\n                                    checked={this.state.toggle=='sell'}\r\n                                />\r\n                                <label htmlFor=\"switch_right\">Sell</label>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"col-md\">\r\n                            <form className=\"switch-field direction\">\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    id=\"switch_direction_to\"\r\n                                    name=\"switchToggle\"\r\n                                    value=\"from\"\r\n                                    onChange={this.toggleDirection}\r\n                                    checked={this.state.direction=='from'}\r\n                                />\r\n                                <label htmlFor=\"switch_direction_to\"><i className=\"fa fa-exchange\"></i>BTC</label>\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    id=\"switch_direction_from\"\r\n                                    name=\"switchToggle\"\r\n                                    value=\"to\"\r\n                                    onChange={this.toggleDirection}\r\n                                    checked={this.state.direction=='to'}\r\n                                />\r\n                                <label htmlFor=\"switch_direction_from\"><i className=\"fa fa-exchange\"></i>USDT</label>\r\n                            </form>\r\n                            <input className=\"form-control price-impact\" type=\"text\" value={this.state.priceImpactVolume} onChange={this.handleChange}/>\r\n                        </div>\r\n                        <div className=\"col-md\">\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md col-stat\">\r\n                            <div className=\"stat-wrapper\">\r\n                                <div className=\"stat-label\">\r\n                                    10% Bid Depth\r\n                                </div>\r\n                                <div className=\"stat-data\">\r\n                                    {this.props.fSym} {utils.formatNumber(this.stats.depth[this.state.toggle].from, 2, true)}\r\n                                    ( {this.props.tSym} {utils.formatNumber(this.stats.depth[this.state.toggle].to, 2, true)} )\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md col-stat\">\r\n                            <div className=\"stat-wrapper\">\r\n                                <div className=\"stat-label\">\r\n                                    Price Impact\r\n                                </div>\r\n                                <div className={`stat-data ${this.stats.impact[this.state.toggle] >= 0 ? 'up-text' : 'down-text'}`}>\r\n                                    {this.props.tSym} {utils.formatNumber(this.stats.impact[this.state.toggle], 3, true)}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md col-stat\">\r\n                            <div className=\"stat-wrapper\">\r\n                                <div className=\"stat-label\">\r\n                                    Price Impact %\r\n                                </div>\r\n                                <div className={`stat-data ${this.stats.impact[this.state.toggle] >= 0 ? 'up-text' : 'down-text'}`}>\r\n                                    { utils.formatNumber((this.stats.impact[this.state.toggle] / this.stats.spread.midpoint) * 100, 3, true) || 0 }%\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md\">\r\n                            <div className=\"stat-wrapper\">\r\n                                <div className=\"stat-label\">\r\n                                    Average Price\r\n                                </div>\r\n                                <div className=\"stat-data\">\r\n                                    {this.props.tSym} {utils.formatNumber(this.stats.impact.average[this.state.toggle], 2, true)}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className={\"col-md\"}>\r\n                        </div>\r\n                        <div className=\"col-md\">\r\n                            Highest bid: <span className={\"up-text\"}>{utils.formatNumber(this.stats.spread.high, 2, true)}</span>\r\n                        </div>\r\n                        <div className=\"col-md\">\r\n                            <div>\r\n                                Midpoint: {utils.formatNumber(this.stats.spread.midpoint, 3, true)}\r\n                            </div>\r\n                            <div>\r\n                                Spread: {utils.formatNumber(this.stats.spread.low - this.stats.spread.high, 3, true)}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md\">\r\n                            Lowest ask: <span className={\"down-text\"}>{utils.formatNumber(this.stats.spread.low, 2, true)}</span>\r\n                        </div>\r\n                        <div className={\"col-md\"}>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nStats.propTypes = {\r\n};\r\n\r\nexport { Stats };","import React, { Component } from \"react\";\r\nimport { Utils } from '../../services/Utils';\r\nconst utils = new Utils();\r\n\r\nclass OrderRow extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render() {\r\n        if(!this.updated && this.props.lastUpdated.indexOf(Number(this.props.order.value)) !== -1){\r\n            this.updated = true;\r\n            var c = this;\r\n            setTimeout(function(){\r\n                c.updated = false;\r\n            }, 100);\r\n        }\r\n        this.price = this.props.order.value;\r\n        this.volume = this.props.order.bidsvolume || this.props.order.asksvolume;\r\n        this.tsymPrice = this.props.order.value * (this.props.order.bidsvolume || this.props.order.asksvolume || 0)\r\n        this.totalVolume = this.props.order.bidstotalvolume || this.props.order.askstotalvolume;\r\n        return (\r\n\r\n            <div className={\r\n                `row data-row ${this.updated ? 'highlight' : ''}`\r\n                }>\r\n                <div className=\"col-md\">\r\n                    {utils.formatNumber(this.price, 2)}\r\n                </div>\r\n                <div className=\"col-md\">\r\n                    {utils.formatNumber(this.volume, 6)}\r\n                </div>\r\n                <div className=\"col-md\">\r\n                    {utils.formatNumber(this.tsymPrice, 4, true)}\r\n                </div>\r\n                <div className=\"col-md\">\r\n                    {utils.formatNumber(this.totalVolume['from'],2, true)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nOrderRow.propTypes = {\r\n};\r\n\r\nexport { OrderRow };","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport Infinite from 'react-infinite';\r\nimport {OrderRow} from './OrderRow';\r\nimport { Utils } from '../../services/Utils';\r\nconst utils = new Utils();\r\n\r\nclass OrderTable extends Component {\r\n\r\n    getTableRows(props) {\r\n        return this.props.keys.map((key) => {\r\n            return (\r\n                <OrderRow lastUpdated={props.lastUpdated} order={props.orders[key]} key={key}/>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.orders || !this.props.keys.length){\r\n            return <div/>\r\n        }\r\n        if(this.props.title == 'Buy'){\r\n            var totalVolume = {\r\n                to: this.props.orders[this.props.keys[this.props.keys.length-1]].bidstotalvolume.to,\r\n                from: this.props.orders[this.props.keys[this.props.keys.length-1]].bidstotalvolume.from\r\n            };\r\n        } else {\r\n            var totalVolume = {\r\n                to: this.props.orders[this.props.keys[this.props.keys.length-1]].askstotalvolume.to,\r\n                from: this.props.orders[this.props.keys[this.props.keys.length-1]].askstotalvolume.from\r\n            };\r\n        }\r\n        return (\r\n        <div>\r\n            <div className={\"row\"}>\r\n                <div className=\"col-md\">\r\n                    {this.props.fSym} {utils.formatNumber(totalVolume.to, 2, true)}\r\n                </div>\r\n                <div className=\"col-md\">\r\n                    <h4>{this.props.title}</h4>\r\n                </div>\r\n                <div className=\"col-md\">\r\n                    {this.props.tSym} {utils.formatNumber(totalVolume.from, 2, true)}\r\n                </div>\r\n            </div>\r\n            <div className=\"orderbook\">\r\n                <div className=\"row title-row\">\r\n                    <div className=\"col-md\">\r\n                        Price\r\n                    </div>\r\n                    <div className=\"col-md\">\r\n                        {this.props.fSym}\r\n                    </div>\r\n                    <div className=\"col-md\">\r\n                        {this.props.tSym}\r\n                    </div>\r\n                    <div className=\"col-md\">\r\n                        Sum({this.props.tSym})\r\n                    </div>\r\n                </div>\r\n                <Infinite containerHeight={400} elementHeight={21}>\r\n                    {this.getTableRows(this.props)}\r\n                </Infinite>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nOrderTable.propTypes = {\r\n    title: PropTypes.string\r\n};\r\n\r\nexport { OrderTable };","import React, { Component} from 'react';\r\nimport {Stats} from './Stats';\r\nimport {OrderTable} from './OrderTable';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Display extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            orders: [],\r\n            lastUpdated: [],\r\n        };\r\n    }\r\n\r\n    render() {\r\n        if(!Object.keys(this.props.orders).length){\r\n            return <div/>;\r\n        }\r\n        var bidKeys = Object.keys(this.props.orders[0]);\r\n        var askKeys = Object.keys(this.props.orders[1]);\r\n        bidKeys.sort(function(a,b){return b-a});\r\n        askKeys.sort(function(a,b){return a-b});\r\n        return (\r\n            <div className=\"container\">\r\n                <Stats fSym={this.props.fSym} tSym={this.props.tSym} orders={this.props.orders}></Stats>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <OrderTable\r\n                            fSym={this.props.fSym}\r\n                            tSym={this.props.tSym}\r\n                            orders={this.props.orders[0]}\r\n                            keys={bidKeys}\r\n                            lastUpdated={this.props.lastUpdated}\r\n                            title='Buy' />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <OrderTable\r\n                            fSym={this.props.fSym}\r\n                            tSym={this.props.tSym}\r\n                            orders={this.props.orders[1]}\r\n                            keys={askKeys}\r\n                            lastUpdated={this.props.lastUpdated}\r\n                            title='Sell'/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nDisplay.propTypes = {\r\n};\r\n\r\nexport { Display };","import { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nconst clientUrl = 'wss://streamer.cryptocompare.com/v2?api_key=df1c3574c94e2c8e04a8c74b07a60b6d2e0279f5a209d81c80973d7bffdd3908';\r\nlet client = new W3CWebSocket(clientUrl);\r\n\r\nexport class OrderbookService {\r\n\r\n    snapshot = {0:{},1:{}};\r\n    lastUpdated = [];\r\n    depth = 2000000;\r\n\r\n    processData(list, type, desc) {\r\n        // Convert to data points\r\n        let res = {};\r\n        for(var i = 0; i < list.length; i++) {\r\n            list[i] = {\r\n                value: Number(list[i]['P']),\r\n                volume: Number(list[i][['Q']]),\r\n            }\r\n        }\r\n        // Sort list just in case\r\n        list.sort(function(a, b) {\r\n            if (a.value > b.value) {\r\n                return 1;\r\n            }\r\n            else if (a.value < b.value) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        });\r\n        // Calculate cummulative volume\r\n        if (desc) {\r\n            for(var i = list.length - 1; i >= 0; i--) {\r\n                if (i < (list.length - 1)) {\r\n                    list[i].totalvolume = {\r\n                        to: list[i+1].totalvolume.to + list[i].volume,\r\n                        from: list[i+1].totalvolume.from + (list[i].volume * list[i].value)\r\n                    };\r\n                }\r\n                else {\r\n                    list[i].totalvolume = {\r\n                        to: list[i].volume,\r\n                        from: list[i].volume * list[i].value\r\n                    };\r\n                }\r\n                let dp = {};\r\n                dp[\"value\"] = list[i].value;\r\n                dp[type + \"volume\"] = list[i].volume;\r\n                dp[type + \"totalvolume\"] = list[i].totalvolume;\r\n                res[list[i].value*100] = dp;\r\n            }\r\n            var ordered = {};\r\n            Object.keys(res).sort(function (a, b) {\r\n                return a-b;\r\n            }).forEach(function(key) {\r\n                ordered[key] = res[key];\r\n            });\r\n        }\r\n        else {\r\n            for(var i = 0; i < list.length; i++) {\r\n                if (i > 0) {\r\n                    list[i].totalvolume = {\r\n                        to: list[i-1].totalvolume.to + list[i].volume,\r\n                        from: list[i-1].totalvolume.from + (list[i].volume * list[i].value)\r\n                    };\r\n                }\r\n                else {\r\n                    list[i].totalvolume = {\r\n                        to: list[i].volume,\r\n                        from: list[i].volume * list[i].value\r\n                    };\r\n                }\r\n                let dp = {};\r\n                dp[\"value\"] = list[i].value;\r\n                dp[type + \"volume\"] = list[i].volume;\r\n                dp[type + \"totalvolume\"] = list[i].totalvolume;\r\n                res[list[i].value*100] = dp\r\n            }\r\n            var ordered = {};\r\n            Object.keys(res).sort(function (a, b) {\r\n                return b-a;\r\n            }).forEach(function(key) {\r\n                ordered[key] = res[key];\r\n            });\r\n        }\r\n        return ordered;\r\n    }\r\n\r\n    populateSnapshot(snapshot, callback) {\r\n        snapshot.BID.map((item, key) => {\r\n            this.snapshot[0][item.P*100] = {\r\n                Q: item.Q,\r\n                P: String(item.P)\r\n            };\r\n        });\r\n        snapshot.ASK.map((item, key) => {\r\n            this.snapshot[1][item.P*100] = {\r\n                Q: item.Q,\r\n                P: String(item.P)\r\n            };\r\n        });\r\n        callback({orders: this.getSnapshot(), lastUpdated: this.lastUpdated});\r\n    }\r\n\r\n    getLastUpdated(){\r\n        return this.lastUpdated;\r\n    }\r\n    resetLastUpdated(){\r\n        this.lastUpdated = [];\r\n    }\r\n    resetSnapshot() {\r\n        this.snapshot = {0: {}, 1: {}};\r\n    }\r\n    getSnapshot(){\r\n        var bidKeys = Object.keys(this.snapshot[0]).sort().slice(-this.depth);\r\n        var topBids = [];\r\n        for(var bidKey of bidKeys){\r\n            topBids.push(this.snapshot[0][bidKey]);\r\n        }\r\n        var askKeys = Object.keys(this.snapshot[1]).slice(0,this.depth);\r\n        var topAsks = [];\r\n        for(var askKey of askKeys){\r\n            topAsks.push(this.snapshot[1][askKey]);\r\n        }\r\n        let bids = this.processData(topBids, 'bids', true);\r\n        let asks = this.processData(topAsks, 'asks',  false);\r\n        return {0: bids, 1: asks};\r\n    }\r\n\r\n    updateSnapshot(update, callback){\r\n        if(update.ACTION == 1){\r\n            this.snapshot[update.SIDE][update.P*100] = {'P': update.P, 'Q': update.Q};\r\n            this.lastUpdated.push(update.P);\r\n        }\r\n        if(this.snapshot[update.SIDE][update.P*100] == undefined){\r\n            console.error(\"No price \", update.P, \" found on side \", update.SIDE, ' to perform action ', update.ACTION);\r\n            return;\r\n        }\r\n        if(update.ACTION == 2){\r\n           delete this.snapshot[update.SIDE][update.P*100];\r\n        }\r\n        if(update.ACTION == 4){\r\n            this.snapshot[update.SIDE][update.P*100]['Q'] = update.Q;\r\n            this.lastUpdated.push(update.P);\r\n        }\r\n    }\r\n\r\n    subscribe(exchange, fSym, tSym, callback) {\r\n        console.log('Subscribing',exchange, tSym, fSym, client);\r\n        client = client == null ? new W3CWebSocket(clientUrl) : client;\r\n        client.onopen = () => {\r\n            client.send(JSON.stringify({\r\n                action: 'SubAdd',\r\n                subs: ['8~'+exchange+'~'+fSym+'~'+tSym],\r\n                api_key: 'df1c3574c94e2c8e04a8c74b07a60b6d2e0279f5a209d81c80973d7bffdd3908',\r\n            }));\r\n        };\r\n        client.onmessage = (message) => {\r\n            if(message.data){\r\n                let msg = JSON.parse(message.data);\r\n                // console.log(msg);\r\n                if(msg.TYPE == 9){\r\n                    this.populateSnapshot(msg, callback);\r\n                }\r\n                if(msg.TYPE == 8){\r\n                    this.updateSnapshot(msg);\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    unsubscribe(currency) {\r\n        console.log('Unsubscribing');\r\n        this.resetLastUpdated();\r\n        this.resetSnapshot();\r\n        client.close();\r\n        client = null;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Subscription } from './Subscription';\r\nimport { Display } from './Display';\r\nimport { OrderbookService } from '../../services/OrderbookService';\r\nconst orderbookService = new OrderbookService();\r\n\r\nclass OrderbookStreamer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.changeSubscription = this.changeSubscription.bind(this);\r\n        this.state = {\r\n            orders: {},\r\n            lastUpdated: [],\r\n            exchange: props.exchange,\r\n            fSym: props.fSym,\r\n            tSym: props.tSym\r\n        };\r\n        let currentComponent = this;\r\n         setInterval(function(){\r\n            currentComponent.setState(prevState => {\r\n                return { orders: orderbookService.getSnapshot(), lastUpdated: orderbookService.getLastUpdated() }\r\n            });\r\n            orderbookService.resetLastUpdated();\r\n        }, 150);\r\n        this.subscribe(this.state.exchange, this.state.fSym, this.state.tSym);\r\n    }\r\n\r\n    subscribe(exchange, fSym, tSym){\r\n        let currentComponent = this;\r\n        currentComponent.callback = (data) => {\r\n            this.setState(prevState => {\r\n                return {orders: data.orders,\r\n                    lastUpdated: orderbookService.getLastUpdated()};\r\n            });\r\n            orderbookService.resetLastUpdated();\r\n        }\r\n        orderbookService.subscribe( exchange, fSym, tSym, currentComponent.callback );\r\n    }\r\n\r\n    changeSubscription(exchange, fSym, tSym){\r\n        orderbookService.unsubscribe();\r\n        this.setState({\r\n            exchange: exchange,\r\n            fSym: fSym,\r\n            tSym: tSym,\r\n        });\r\n        this.subscribe(exchange, fSym, tSym);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Subscription\r\n                    subscribe={this.changeSubscription}\r\n                    exchange={this.state.exchange}\r\n                    fSym={this.state.fSym}\r\n                    tSym={this.state.tSym}\r\n                />\r\n                <Display\r\n                    fSym={this.state.fSym}\r\n                    tSym={this.state.tSym}\r\n                    orders={this.state.orders}\r\n                    lastUpdated={this.state.lastUpdated}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { OrderbookStreamer };","import React from 'react';\r\nimport { Header } from './components/Header';\r\nimport { OrderbookStreamer } from \"./components/OrderbookStreamer/OrderbookStreamer\";\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <Header title='CryptoCompare Orderbook L2 Streamer' />\r\n        <OrderbookStreamer exchange={'Binance'} fSym={'BTC'} tSym={'USDT'}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}